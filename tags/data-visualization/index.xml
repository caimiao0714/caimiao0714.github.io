<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Visualization on </title>
    <link>/tags/data-visualization/</link>
    <description>Recent content in Data Visualization on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 02 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/data-visualization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Color palettes in R</title>
      <link>/notes/color-palletes-in-r/</link>
      <pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/notes/color-palletes-in-r/</guid>
      <description>R packagesggsciMapPalettesnationalparkcolorswesandersonviridisRColorBrewercolorspace package_brewer() function from ggplot2Websitescolorbrewer 2.0open colorggplot color best tricks you will loveTop R color palettes to know for great data visualizationR packagesggsciScientific Journal and Sci-Fi ThemedColor Palettes for ggplot2
NPG: scale_color_npg() and scale_fill_npg()AAAS: scale_color_aaas() and scale_fill_aaas()NEJMLancetJAMAJCOUCSCGBD3LocusZoomIGVUChicagoStar TrekTron LegacyFuturamaRick and MortyThe Simpsonspacman::p_load(dplyr, ggplot2)mtcars %&amp;gt;% filter(carb &amp;lt;= 4) %&amp;gt;% ggplot(aes(mpg, gear, color = factor(carb))) + geom_point(size = 4) + theme_classic() + ggsci::scale_color_npg()MapPalettesMapPalettesgreen_machine,irish_flag,tealberry_pie,sunset,the_joker,bruiser# devtools::install_github(&amp;quot;disarm-platform/MapPalettes&amp;quot;)pacman::p_load(dplyr, ggplot2, MapPalettes)mtcars %&amp;gt;% filter(carb &amp;lt;= 4) %&amp;gt;% ggplot(aes(mpg, gear, color = factor(carb))) + geom_point(size = 4) + theme_classic() + scale_color_manual(values = MapPalettes::map_palette(&amp;quot;tealberry_pie&amp;quot;, 4))nationalparkcolorsnationalparkcolors# devtools::install_github(&amp;quot;katiejolly/nationalparkcolors&amp;quot;)pacman::p_load(dplyr, ggplot2, nationalparkcolors)mtcars %&amp;gt;% filter(carb &amp;lt;= 4) %&amp;gt;% ggplot(aes(mpg, gear, color = factor(carb))) + geom_point(size = 4) + theme_classic() + scale_color_manual(values = nationalparkcolors::park_palette(&amp;quot;MtRainier&amp;quot;, 4))wesandersonwesanderson R package GitHubWes Anderson Palettespacman::p_load(wesanderson)names(wes_palettes)## [1] &amp;quot;BottleRocket1&amp;quot; &amp;quot;BottleRocket2&amp;quot; &amp;quot;Rushmore1&amp;quot; &amp;quot;Rushmore&amp;quot; ## [5] &amp;quot;Royal1&amp;quot; &amp;quot;Royal2&amp;quot; &amp;quot;Zissou1&amp;quot; &amp;quot;Darjeeling1&amp;quot; ## [9] &amp;quot;Darjeeling2&amp;quot; &amp;quot;Chevalier1&amp;quot; &amp;quot;FantasticFox1&amp;quot; &amp;quot;Moonrise1&amp;quot; ## [13] &amp;quot;Moonrise2&amp;quot; &amp;quot;Moonrise3&amp;quot; &amp;quot;Cavalcanti1&amp;quot; &amp;quot;GrandBudapest1&amp;quot;## [17] &amp;quot;GrandBudapest2&amp;quot; &amp;quot;IsleofDogs1&amp;quot; &amp;quot;IsleofDogs2&amp;quot;# devtools::install_github(&amp;quot;karthik/wesanderson&amp;quot;)pacman::p_load(dplyr, ggplot2, wesanderson)mtcars %&amp;gt;% filter(carb &amp;lt;= 4) %&amp;gt;% ggplot(aes(mpg, gear, color = factor(carb))) + geom_point(size = 4) + theme_classic() + scale_color_manual(values = wesanderson::wes_palette(n = 4, name = &amp;quot;GrandBudapest1&amp;quot;))viridisviridis</description>
    </item>
    
    <item>
      <title>Data visualization using ggplot2</title>
      <link>/notes/data-visualization-using-ggplot2/</link>
      <pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/notes/data-visualization-using-ggplot2/</guid>
      <description>Kaplan-Meier survival plots using survminerOne Kaplan-Meier plot using survminersurvminer::ggsurvplot(survfit(utotalPSM ~ integ, data = total), pval = TRUE, conf.int = TRUE,legend.title = &amp;quot;Hospital type&amp;quot;,legend.labs = c(&amp;quot;Ordinary Hospitals&amp;quot;, &amp;quot;Medical Consortium Hospitals&amp;quot;),submain = &amp;quot;Kaplan-Meier plot for a pool of three patient cohorts&amp;quot;,xlab = &amp;quot;Survival length of stay&amp;quot;,palette = c(&amp;quot;firebrick1&amp;quot;, &amp;quot;green4&amp;quot;),font.submain = c(16, &amp;quot;bold&amp;quot;))Arrange 3 survival plotsplot3cohorts = survminer::arrange_ggsurvplots(list(ggfei.m, ggwei.m, ggshiguan.m), nrow = 3, ncol = 1)Code and data.</description>
    </item>
    
  </channel>
</rss>